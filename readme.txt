
30.09.18
сделать метод family_statistic в файле statistics.py
нужно интегрировать в него метод count_families, чтобы вся статичтика по семьям считалась за один проход

нужно отделить живых от мертвых, чтобы поиск супругов, да и вообще любые взаимодействиямежду людьми 
считались быстрее

01.10.18
старая идея - называть новорожденных именем кого-нибудь из родственников


в классе статистики сделать метод print_soc_state, который бы выводил всю статистику в файл

02.10.18
сложности с классом Data
Я не могу просто присваивать определенным событиям класс Data с определенными параметрами, так как 
в этом случае будет возникать просто ссылка на объект, надо создавать новый объект с такими же 
значениями. Но в этом случае я не смогу сравнивать объекты, так как они разные. Надо добавить 
переопределение метода сравнения обюектов. Оператор равенства.
Починил все довольно просто оказалось. Вместо копирования данных о времени в другой объект 
просто сделал метод объекта, который порождает другой объект даты с такими же параметрами.
Ну и переопределил оператор __eq__ данного класса.


04.10.18 (013)
Если уж взялся за дату, то надо ее и дописываь.  пока не вижу смысла в классе Time. Думаю,  надо 
просто создать главную дату socium.anno и прокручивать ее в классе Socium, что уже сейчас подобным 
образом и реализовано. 

Для класса Data нажно сделать нормальные сравнения, раз уж взялся. Типа больше-меньше.
Придется еще сложение и вычитание дат делать, так как в коде такие случаи встречаются.

Дата теперь стала структурой, а хитпоинты остались целым числом. Хитпоинты надо связать сдатой, 
чтобы не было массового вымирания раз в год, а смерти распределялись равномерно.
Да и над возрастом персоны надо подумать. Так то это цеое число и есть.

С новыми датами разобрался. Вроде все работает.

15.12.2018 (014)
Стелал здоровлье персонажа отделным классом. Теперь Health.health имеет форму даты и 
символизирует количество лет, месяцев и дней, оставшихся человеку до смерти. 
Hitpoints - то эе самое число дней до смерти, но в форме int.

Хотел отделить текущую дату от социума, но что-то забоялся, все слишком на социум завязано.
А хотел я это сделать по той причине, что социум запускается из главного файла, а в главном 
файле неплохо бы определить время симуляции, например 50 лет. 50 лет - это не число, а дата. 
Чтобы детальность симуляции подхватывалась исходя из настроек даты. Еслии в году 1 месяц, то 
программа прогоняла бы 50 циклов, а если 4 месяца, то 200 циклов. И чтобы дата спускалась 
сверху в социуа, а не возникала в нем. Но не сложилось. Сделал халявно. Добавил класс Anno, 
наследующий класс  Date и перенес туда метод time_pass. Ведь только с Anno он и используется.

Оказалось, что у меня неправильно был опрелен метод вычитания дат. Сложно и неправильно. 
Упростил и добавил метод nornalize, для приведения даты к правильному виду.

15.12.2018 (015)
Добавил беременность, которая длится год и 100% заверашется родами. Так же сделал 
констатнту на 1 ребенка в 10 лет для женщины, чтобы за фертильный возраст успела родить 
трех детей.

16.12.2018 (016)
Добавил немножко статистики в выдаче. Теперь у каждого персонажа есть свой ID, и если 
сперсонажем что-то происходит, то в логе вместе с событием пишется его айдишник, чтобы 
проще было отследить персонажа.

16.12.2018 (017)
Сделал в классе Human метод развода (divorce). После развода супруга возвращается
к своей изначальной семье (в которой ее родили)(origin_family_ID). Если после развода 
или смерти супруга рождается ребенок, он получает семью последнего экс супруга матери.
Если мать женится на другом мужчине, то он  приписывается к семье текущего мужа матери.
Вот еще бы что-то вроде траура следать, а то после развода люди слишком быстро женятся.
И не поставлено условие, что они не могут жениться на прежних супругах.

По мелочи доработал класс статистики, (убрал подсчет того, что можно по ходу работы 
программы посчитать).

17.12.2018 (018)
Следал метод necrolog в классе Human, который позволяет отследить основные вехи жизни 
покойного. Что уж там говорить, что информация в этом методе отображается самая 
недостоверная. Но баги отлавливать буду потом. 
Оформил список свадеб в виде словаря - чтобы на свадьбу с каждым новым супругом 
была своя дата. Причем нужно отметить случай, когда супруги после разводов женятся 
друг на друге снова. Для этого внутри словаря сделаны списки дат на каждого супруга.

Чепуха с фамилиями детей при выводе некролога получается из-за того, что девочки 
выходят замуж и меняют фамилии.
Есть еще косяк, когда в некрологе муж не числится, а дети есть (но свадьба была).
Дело втом, что когда человек умирал, его супруг не добавлялся в списко экс-супругов.

На будущее - кулдаун для разведенных хотя бы в год, а то сильно быстро пережениваются.

Разводы тоже надо оформить в виде словарей, учитывая, что развод - явление, симметричное 
свадьбе.


Начал работать над процедурой развода, но не доделал, спать охота. Пока вылетает с ошибкой.
А должна добавлять даты разводов в словарь по имени супруга. В том числе в случае смерти.
Тут еще неплохо добавлять, почему произошел развод - по чьей инициативе или в случае
 смерти супруга. Что требует отдельного класса.
 Или случай смерти супруга в качестве развода не рассматривать.


3.03.2019 (019)
Для подбора семейной пары сделалтакую штуку: для каждого человека определяется список 
близких предков: это мать, отец, дедушки и бабушки. Если у людей эти списки предков где-то
пересекаются, значит им жениться нельзя - они двоюродные родственники.

В тут решил было сделать список взрослых неженатых людей, чтобы по нему прогрнять всех 
желающих жениться, но потом увидел, что в модуле statistics в методе family_statistics  
уже определяются списки неженатых мужчин и женщин. Это сокращает выборку желающих вступить 
в брак.

Починил некролог, теперь программа не вылетает. ТАм была проблема в том, что при смерти 
женатого человека выставлялась дата развода. Но только для самого умершего. Для супруга 
даты не было. После добавления вылетать перестало.

Сейчас так вероятности зававно выставлены, что все разводятся через 40-50 лет. 
 А, понял, это смерти так отображаются. Хотя бы все в браке умирают, а не в одиночестве.
 Нужно указыват причину развода, чтобы понятнее было.

НА СЛЕДУЮЩУЮ ВЕРСИЮ:
 - Правильный подбор супругов (из заготовленных списков)
 - Кулдаун после неудачных отношений (выбывает из числа ищущих супруга).
 - Рождение двойни, тройни и тд.
 - Внятнее показыветь дату смерти (не обозначать ее как развод). Или овосе в таком случае 
не указывать (или писать "овдовел")


4.03.2019 (020)
Сделал в  модуле genetics коэффициент желания вступить в брак (процедура lust_coef), 
который зависит от возраста, а то сильно часто у меня старые люди женятся.
Убрал failed_loves, заменил на failed_love. так как теперь один мужчина не будет пытать
шанса на любовь со всеми женщинами. А за один цикл будет выбирать одну женщину. Если 
у них ничего не вышло, каждому ставится отметка и они выбывают из свадебной гонки до 
следующего цикла.

Сделал женитьбу по новому алгоритму. Не совсем правильно работает. Не все холостые ищут
себе пару. ТАм много отладочных принтов. Билд чисто технический, чтобы обкатать новый 
алгоритм. Запрет на близкородственное скрещивание пока не делал.
Последний кандидат не ищет супругу, как будто где-то преждевременный выход из цикла.

Не нужно делать filed_love, нужно просто сразу выкидывать несчастных любовников из 
текущего списка женихов, чтобы лишние циклы не крутились.

НА СЛЕДУЮЩУЮ ВЕРСИЮ:
 - При выводе окончательной статистики по персонажу не писать, сколько раз он женился, 
сколькоо развелся, а выдавать линию жизни: женился, развелся, побыл холостым, потом 
снова женился, родил ребенка. Это как-то более органично воспринимается.
- надо коэффициенты желания жениться поднять, а то все такие привередливые, что у меня 
популяция вымирает (коэф просто не работает как надо).

5.03.2019 (021)
Прчинил функцию lust_coef, теперь как надо работает. Коэффициенты потом подберу.
Убрал параметр filed_love. Вместо этого неудачные кандидатуры просто удаляются из списка 
холостых на период свадеб.
ПРОБЛЕМА: нельзя список обрабатывать в цикле и одновременно изменять его длину. После 
сокращения списка цикл перескакивает через фамилии. РЕЩИЛ тем, что не стал удалять 
элементы из списка во внешнем цикле (тех, кот ищет супругов). Он все равно проходит 
один раз. А вот внутренний цикл (избранники - удачные или нет) нечувствителен к 
сокращению - он после обработки первого элемента все равно прерывается. В таком случае 
от внутреннего цикла можно вовсе избавиться. Заменить цикл на рандомный элемент из пула 
избранников (брать нулевой элемент нельзя, потому что у первых всегда будет приемущество).
Реализовал. Вроде ОК.

НА СЛЕДУЮЩУЮ ВЕРСИЮ:
 - Год у меня отобрадается после эпохи свадеб. Над посмотреть на очередность исполнения
  процедур.


5.03.2019
Попытался внедрить проверку на ближних родственников при заключении брака. Вроде 
заработало, но опка непонятно, насколько корректро. Количество людей после этого 
выросло, что наводит на подозрения. Нужно проконтролировать.


9.03.2019(022)
В некрологе по пресонажам добавит, от кого родился каждый ребенок (кто второй родитель).

Смотрю правильность поределения опбих родственников при женитьбе. Отследил несколько 
примеров, вроде все правильно. Вот только забыл выставить несчастную любовь, и кандидаты 
на свадьбу начали опять крутиться в цикле. Но это я быстро поправил.

НА СЛЕДУЮЩУЮ ВЕРСИЮ: 
 - надо вводить ограниченные пищевые ресурсы. Сначала прлностью фиксированные. Потом 
меняющиеся от года к году. Потом расходуемые в течение всего года.
 - корректировочный коэффициент для желающих жениться: чем больще разница в возрасте,
тем ментше вероятность жениться. Но этот коэффициент не должен сильно влиять на 
изначальное число - примерно на 15-25%.
 - если есть большая разница в клдичестве мужчин и женщин. Если есть много жолостых 
мужчин, а женщин мало, то за них должны бороться. Соответственно и вероятность 
свадьбы повышается.
 - роджение детей. С возрастом фертильность падает. А у женщин так и вовсе 
 драмматически. Днужно сделать чтобы у женщин после 50 лет шанс родить ребенка был 
 раз в 8 меньше. А после 60 составлял 1% от изначальной фертильности. У мужчин чтобы 
 тоже потенция падала. А то рожают тут всякие в 70 лет.


9.03.2019(023)
Убрал вывод подробной информации из свадебного метода (socium.search_spouce).
Убрал лишние файлы из папки с именами и фамилиями.
Оказалось, что сначала формируется статистика(списки холостых людей), потом они живут 
- и умирают, а потом эти мертвые женихи ищут семь. Не знаю, были ли случаи, когда они 
ее находили, но  изменил порядок:
		person.live()
		self.stat.family_statistics()
		self.search_spouce()
Проверил - мертвые жениться перестали. Количество людей после исправления изменилось.

13.03.2019(024)
Для того, чтобы сделать зависимость людей от еды, переделываю их здоровье. До этого 
она было выполнено в форме даты, но так его неудобно изменять, так как минимальная 
единицв изменения 1 день. А если в году всего 4 дня? У человека жизнь сокращается 
на 1 день и тут же прибавляется на 1 жень. Теперь  жизнь (пааметр health) - это число 
с плавающей точкой (снова). За счет времени оно будет сокращаться на фиксированную величину

Начал внедрять систему голода. Изначально задается желаемое количество людей в социуме, 
исходя из этого вычисляется количество еды. Оно одно и то же кадлый ход. Каждый ход 
распределяется поровну на всех жителей, после чего выбираются две группы людей. В 
каждой треть социума. Это пока что, можно социум и пополам поделить. Эти группы  - 
конкуренты. Люди из этих групп попарно сравниваются. Вычисляется разница их 
приспособленности (genes.fitness) И еда передается от менее приспособленного к более 
приспособленному.
Изменеие срока жизни зависит от питания. Я сделал список FOOD_BONUS, который индексируется 
параметром satiety. На основе этого списка вычисляется штраф или бонус к здоровью. 
Нелоедание ведет к преждевременной смерти. Сильное переедание тоже. Хорошее питание 
немного продлевает жизнь.
Все-таки изобилие не совсем правильно работает, один чувак из первой генерации умудрился 
до 158 лет прожить. Это видимо линейные законы, которые не работают, надо квадратичные 
или степернные.

И прикрутить нормальную статистику по возрасту.

13.03.2019(025)
Сделал наслеование генетических черт от родителей - за основу берется сумма их черт 
и немного варьируется. Особо много не тестировал.

НА СЛЕДУЮЩУЮ ВЕРСИЮ: 
 - сделать фертильность, как наследственную черту, причем, чтобы она падала с возрастом.
 - сделать усиленное сокращение здоровья к концу жизни,  чтобы долгожителей не было.
 - сделать таблицы, показывающие, какое распределение значений трейтов на разных этапах 
 симуляции. Нужно проверить вот что: на раннем этапе назкая приспособленность не очень 
 критична, так как еды ватает на всех, так что отбор по признаку приспособленности не 
 ведется. Как только еды станет мало, не приспособленных начнут щемить. Вот это надо 
 проверить на графиках - будет ли в популяции доля неприсособленных падать со временем?

17.03.2019(026)
Решил добавить такую штуку, как abstinence, то есть умеренность. Это эффективнось 
усвоения еды. Выступает как модификатор к приспособленности. Если человек добывает 
мало еды, но он умеренный, он может относительно неплохо жить. Если он неумеренный, 
то будет переедать, и это не лучшим образом скажется на его самочувствии. По логике, 
в эпоху изобилия  этот трейт не будет особо востребован, а когда ресурсы закончатся, 
он будет выступать фактором выживания.

Сделал статистику, как изменяются средние значения трейтов со временем.

17.03.2019(027)

НА БУДУЩЕЕ: 
 - выводить все файлы статистики в отдельный каталог. И обеспечить независимость 
путей от платформы. Чтобы на линуксе правильные слэши ставились.

Снова перекомпоновал процедуры, считающие статистику. Раньше процедуры count_soc_state 
и family_statistics вызывались из модуля Socuim друг за другом, тепеть family_statistics 
вызывается  из count_soc_state, так как во время работы они использовали данные, 
полученные друг в друге и в функции count_soc_state использовались данные, полученные 
в count_soc_state на прошлом ходу.
Провел опыт с вымиранием, когда в социуме на 100 человек изначально заселялось 800 
человек. Произошло массовое вымирание. Но в статистике, которая выодилась в файл 
population.txt, обнаружился косяк. На первом ходу она показывает 791 человек и 0 семей. 
ТО есть кто-то уже вымер, а статистика по семьям еще не считалась.На втором ходу 769 
человек и 800 семей. Прошла вторая волна вымирания, а семьи для первого хода только 
посчитались.

Вынес переменную families_in_socium из family_statistics в отдельную функцию 
families_in_socium, так как она никакой особо полезной функции не несет. В рассчетах 
не участвует, а нужна только лоя вывода статистики. 

Изменил порядок вызова функций в методе socium.tictac. Все таки сначала лолжны идти 
все социальные активности, потом личные активности, а в конце считаться статистика, 
чтобы в следующий год на этой статистике провернуть социальные активности. Да, перед 
статистикой поставил вызов странника, раньне он у меня стоял перед социальными 
активностями и рушил программу на распределении еды. То есть он приходит в социум, 
но действовать начинает только со следующего хода, когда он учтен в списке живых 
людей.
В прошлой версии сделал так, что при изобилии abundance сильные не отнимают еду у 
слабых, а берут ее из воздуха. Что-то не очень работает.
Сделал abstinence, теперь он реально влияет на снижение здоровья. 
==================
Запускал симуляцию на длительный срок, вплоть до 15 тысяч лет, абсолютно не видно 
каких-то закономерностей в изменении генов. Когда делаешь предел пищи на 200 человек, 
а изначально спавнишь 600 человек, сначала выживают люди с лучшей приспособленностью, 
но когда численность населения стабилизируется - гены просто хаотично мечутся, 
никакой тенденции не видно.

26.03.2019(028)
Добавил работающую фертильность. Работает по странной формуле. Шанс забеременнеть 
это произведение фертильности матери на корень квадратный фертильности отца. Думаю, 
что в вопросе беременности параметры женщины имеют решающее значение. В связи с этим 
эволюуия фертильности должна идти у мужчин и женщин по разному, и надо это отслеживать.
Хотя этот вопрос интересный. В моем случае фертильность влияет только на количество 
детей и больше ни на что. Соответственно нет эволюционных факторов, которые способствуют 
целенаправленному изменению этого параметра. Именть много детей и не выгодно и не 
обременительено.
Разве что при рожах нужно добавить урон к здоровью.
И снижение фертильности в зависимисти от сытости.
А нет, есть причина. Если гены наследуются, то будет рождаться больше деьей с высокой 
фертильностью и будут вытеснять мало плодовитых.

Сделал менденное уменьшение пищевого ресурса, например изначально имеется пища 
на 250 человек, и она в течении 1000 лет снижается до значения, когда могут прокормиться 
90 человек.

Количество семей со списком - в отдельный файл, а список людей с перечислением трейтов 
- в отдельный.

Что-то сломал. В социуме, рассчитанном на 300 человек начали размножаться десятки 
тысяч людей. Похоже, что умеренность позволяет сильно хорошо выживать. Даже при 
нулевом питании ущерб ждя здоровья нанисится незначительный.
После запуска гена фертильности естетственный отбор начал работать слишком эффективно.

Все новорожденные получают в первый цикл нормальное питание - 5 единиц. Поэтому 
новорожденные от голода не умирают.


27.03.2019(029)
На время изменил формулу фертильности, так чтобы количество детей от нее не зависело. 
Оказалось, что естественный отбор сразу пропал. Трейты осциллируют вокруг изначальных 
значений.
Когда количество родженных детей зависит от фертильности, трейты средние трейты социума 
явно возрастают. Лучге всего растет приспособленность. Когда она выросла почти до упора, 
за ней начинает подтягиваться умереннность, а фертильность растет медленнее всех и 
максимального значения не достигает.
В прошлой версии была ошибка (по крайне мере в моей первоначальной задумке). Количество 
детей было пропорционально произведению плодовитостей отца и матери, а не произведению 
плодовитости матери на корень плодовитости отца. Именно при такой формуле отбор работает 
хорошо даже слишком быстро. Когра я сделал "правильную" формулу, видимые тенденции 
опять исчезли.

Сделал чистку главного массива от забытых родственников. Тпепрь они отравляются  в 
список forgotten раз в 30 лет. Из за этого в конце симуляции неправильно отрабатывает 
hall_of_fame, потому что в списке  soc_list остаются только относительно свежие мертвецы. 
Нужно в конце эти два списка обхединять. Из-за этого же средний возраст смерти тоже 
выглядит как пила.

Добавил в файл вывода статистики колонку , на сколько людей рассчитана имеющаяся еда.

Теперь все фалы сосстатистикой выводятся в отдельный каталог.

Раздедли файды сос татистикой по семьям и со статистикой по тейтам отдельных людей. 
Тпепрь в файле со статистикой семей выводятся усредненный трейты для этой семьи (рода).
В статистику по трейтам всех людей добавил, на сколько их жизнь уменьшается за счет голода.

09.04.2019(030)
Подчистил кое-какие неиспользуемые функции.
Определеил константы, отвечающие за возраст людей. В классе Health переопределил 
генерацию срока жизни с использованием этих констант. так эе переопределил методы 
определения возрастных этапов в классе Human.

21.04.2019(031)
Увеличил цифры потребляемой еды в 20 раз и сделал это значение с плавающей запятой. 
Переменная satiety теперь практически потеряла смысл. Надо в будущем мот нее избавиться.

Пока ничего не работает. Кормежка осоуществляется неправильно. какие тоо бешенные 
бонусы возникают ниоткуда. Скорее всего неправильный знак у бонуса от еды. Надо исправить.


11.05.2019(32)
Перешел в среду программирования PyCharm. довольно удобно, но непривычно. Пытаюсь дебажить
программу. Исправил неправильное потребление еды в genetics.modify. Там когда abstinence_bonus
был (при abstinence ==3) равен нулю, программа быстро убивала чувака даже во времена изобилия.

Теперь нужно разобраться, почему численнось социума падает до 10 человек, при том что все
питаются нормально и голода не испытывают. И еды там заплпнировано на 100 человек.


12.05.2019(33)
Убрал из файла статистики параметры "родилось" и "умерло", потому что статистика выводится не
каждый месяц (а для больших отрезков времени раз в несколько лет), то ироку от таких акркметров
нет, так как они не накопительные а мгновенные.

Вместо этого сделал три параметра: процент детей, взрослых и стариков, что позволяет судить
о демографическом составе популяции.

Переделал параметр "средний возраст смерти". Раньше он считался по всем умершим людям с начала
популяции. Теперь он считается по людям, умершим за последние пять лет.

При очистке социума от старых мертвецов (которых при длительной симуляции накапливалось очень
много) возникала проблема, что в конце симуляции давалась статистика только по относительно
свежим, не забытым мертвецам. Все что умерли раньше 180 лет назад отправлялись в отдельный
массив и не считались. Тпепрь в конце симуляции два списка объелиняются, получившийся список
сортируется по номерам людей и выводится статистика по всем умершим.

Интересно было бы построить распределение по возрасту смерти.
А так же распределение по количеству детей.
Я заметил, что у меня изрядно долгожителей, логично что у них должна быть куча детей. Но
они в основном бездетные попадаются. Нужно разобраться.
Процентное рпспределение по возрасту смерти с квантованием в 10 лет.
Процентное распределение людей по количеству детей. Для женщин отдельно, для мужчин отдельно.
Чтобы эти распределения отличались, нужно сделать повышенные требования к еде для женщины в
период беременности и вскармливания.
Если во время беременности женщина мало ест, это может привести к падению характеристик у ребенка.
Роды наносят вред женщине, сокращая ее жизнь.
Качество питания ребенка в первые годы жизни служит определяющим фактором для его здоровья. 
Плохо питался в первые три года - умрет раньше срока.

Оказывается за счет хорошего питания некоторые люди у меня живут очень долго. Многие доживают до 
120 тет. А есть один товарищ, который прожил 132 года. Хотя при рождении ему были отведены 65 лет.
Просто хорошо кушал. Надо разобраться. Ну и ускоренное умирание с возрастом добавить.

Провел тесты с разной численностью популяции сроком в 2000 лет развития, чтобы посмотреть, как
будут меняться значения генов людей. При популяции в 100 человек происходят в основном хаотичные
флуктуации, работы естественного отбора не видно. И даже на 290 особях все выглядит довольно
неопределенно. Какая-то осмысленная тенденция к росту характеристик людей начинается с 450 людей.
Плюс еще какое-то время система приходит в равновесие. Такое ощущение, что чем больше людей, тем
скорее наступает равновесие. Но опять же, чем больще людей может пропитать биом, тем позже
популяция достигает предельно численности в биоме  и тем позже начинает действовать фактор
естественного отбора. Но при большой популяции графики выглядят более сглаженно

Как меняются характеристики людей.
Во время изобилия отдельные люди становялтся долгожителями. Дотягивают до 150 лет, при изначально
отпущенном сроке в 60 лет. И детей они родят тоже много. Но когда пищи на всех перестает хватать,
общество преображается. Старики почти пропадают. Средняя протолжительность жизни уменьшается до 55,
многие люди умирают в молодости. Многие опять же не успевают жениться и родить детей.

По хорошему, для показательных экспериментов нужно брать популяцию в 2000 людей и гонять хотя бы
3000 лет, иначе явных результатов не будет. Но это довольно долго получается. В целях отладки
конечно за 200 особей залезать не соит. Но и результатов никаких не получится, сплошной шум.


21.05.2019(34)
Написал разбивку по возрасту смерти в конце симуляции в методе socium.hall_of_fame. И там же
разбивку по количеству детей у мужчин и женщин отдельно. Там выаодятся проценты, сколько женщин
бездетных, сколько с одним ребенком и т.д.
Так-то все хорошо, но он дает не конкретные результаты, а размазанные по всему периоду симуляции,
например 1000 лет.
Надо чтобы эти значения считались периодически. Например раз в 50 лет, чтобы следить за изменением
социума.
Надо метод socium.hall_of_fame настроить так, чтобы о не в конце симуляции вызывался, а в любой
момент и считал не за весь период, а за конкретно заданный промежуток времени.
А делается это просто. Нужно места, где считаются срезы вынести из socium.hall_of_fame и перенести
в statistics и вызывать в методе count_soc_state с нужным периодом.

Сделать find_oldest_man и find_biggest_family отдельными процедурами, чтобы не искать их в коде
потом, не удивляться, что это за строчка. Ну и сделать, чтобы эти процедуры возвращали конкретных
личностей, а не просто цифры.


23.05.2019(35)
Перенес статистику по возрасту смерти и расрпделению детей в семьях в модуль statistics. Параметры
считаются раз в 40 лет. Только при подсчете детей не учел, что несовершеннолетних считаь не надо.
Там исправление на одну строку, но это уже потом.


26.05.2019(36)
Сделал раздельный посчет средних значений трейтов для мужчин и женщи, чтобы наблюдать как они
эволюционируют в зависимости от пола.
Каких-то различий в эволюции трейтов пока не заметил. Все идет согласованно.

Сдела две модификации для сытости. Это модификация для  беременных женщин, которая просто понижает
сытость на единицу.
И модификация отрицательная модификация сытости в зависимости от фертильности, чем больше
фертильность, тем ему труднее наесться. Для женщин этот модификатор в три раза меньше, чем для
мужчин.

Попробовал сделать деградацию генов. Чтобы в большинстве случае геры детей были меньше генов
родителей, чтобы затруднить естественный отбор. Получилось довольно странно. Стало рождаться мало
детей, популяция уменьшалась. К тому де выключил приток странников.
Убрал дергадацию генов, но популяция все равно вымирала, так как количество детей в семье болталось
около 1 штуки. Повысил коэффициент рождаемости в 2 раза. Цивилизация затузать перестала.
Снова внедрил деградацию генов. Цивилизация опять вымирает. Гены неуклонно движутся к минимуму,
за исключением фертильности, этот трейт как-то держится. В общем, никакой деградации, только
саморазвитие.
Кстати, странники это саморазвитие тормозят, так как они прибывают с весьма средники значениями
генов и разбавляют геры суперлюдей своей нечистой кровью.

Добавил родовую травму, которая равняется 2 + хвос распрелеоения гауса от 2. То есть где-то 2-5
циклов.

Добавил в файл отчета death_distribution.csv средний возраст смерти для мужчин и женщин


26.05.2019(37)
Добавил раздельное наследование характеристик по женской и мужской линии. Мальчики с большей
вероятностью наследуют трейты отцов, а девочки - матерей. Наконец-то опявились какие то отличия
в характеристиках полов. Количество женщин со временем растет и живут они дольше мужчин.


Переименовать все, что сейчас связано с family в tribe, так как у меня имеется в виду род.
А теперь под семьей будет пониматься один или два супруга с малолетними детьми - для распределения
пищи.


04.06.2019(38)
Активно внедряю класс Family. Подробности писать не буду, ибо долго это. Но программу придется
очень сильно перерабортать, так как теперь все на семьях будет держаться.

Заметки:
Нужно сделать набор генов, которые действуют в разные пеирпиды времени. Например, когда дети уже
рождены, можно изменять свое поведение. Например такие этапы: 18, 30 и 50 лет. Кроме того, эти
этапы возможно двигать исходя из генов человека. Нпример, после 30 фертильность падает.
Можно ввести параметр предохранение - чтобы не рожать детей, даже если фертильность это позволяет.
Можно сделать активацию генов в определенные периоды и такое же затухание.
Ген неуживчивости (harshness) - насколько легко человек может покинуть семью. Если сделать так,
что жена с детьми будет добывать меньше пищи, а питаться будут из общего котла с мужем - жена
будет заинтересована в сохранении семьи, а муж - нет, так как делиться ни с кем не надо будет.

06.06.2019(39)
Три дня сидел в отладчике, чтобы настроить нормальную работу программы. Так как у меня большая
часть логики завязана на перебор по людям, а я пвтаюсь вкорячить перебор по семьям. Возникают
всякие неувязки и программа падает. Сейчас более-менее ее отладил. Сохранюсь.

Впереди реализация питания через семью, общий пищевой ресурс на семью.


06.06.2019(40)
Предлагаю такой вариант перераспределеняи еды:
- в socium происходит первочное распределение еды между всеми людьми поровну
- дети добывают в два раза меньше еды, чем обычный человек, остатки теряются
- женщина добывает настолько меньше еды, сколько у нее несовершеннолетних детей
- дальше в семье образуется бюджет, в который родители складывают пищу в пропорциях,
регулируемых их альтруизмом.
- дальше семьи отжимают друг у друга из семейного бюджета. Измеряется сумма
приспособленностей мужа и жены. Максимально можно забрать половину бюджета.
- далее детям даются равные добавки из общего бюджета, чтобы добить до нормального уровня
потребления. Но не больще половины общего бюджета.
- из остатка забирает жена по формуле x*(приспособленнось-альтруизм+альтруизм_мужа)
(но чтобы сумма своего и добавки не превышала гедонистический уровень потребления)
- то что осталось, забирает муж, опять же не превышая гедонистический уровень
- если все еще что-то осталось, делится между родителями или пропадает.


хочу сделать метод figth_for_food методорм класса, но надо почитать, а уже поздно.
На нем я и остановлился. Он делается из переделанного food_distribution в socium


Так же для каждой семьи должен быть параметр  - достаток. Что-то вроде средней сытости по
семье. Чтобы семьи с большим достатком могли делиться едой с голодающими семьями.

И еще нужно сделать запас. То есть, все издишки еды переходят на следющий ход. Распределение
между запасом и немедленным употреблением тоже должно регулироваться генами. При этом хорошо
бы сделать так, чтобы процент запаса не был фиксированным, а регулировался в зависимости от
бобытой еды. Простой способ реализации: пороговое количество еды, при котором человек
начинает создавать запасы.Кто-то например съедает все, что удалось добыть, а другой живет в
проголодь, но делает запас.
Опять же, нужен порог запаса, при котором накопления останваливаются.
Ну и еще один интересный аспект - как накопленные запасф переходят по наследству?
Первому сыну в семье? или приданное для невесты? А может калым за невесту?


15.06.2019(41)
Сделал распределение еды внутри семьи, возможно что-то напутал, но теперь популяция со
временем снижается и жаде не достигает пределного значения. Нужно смотреть логи, где-то
ошибка.


16.06.2019(42)
Вопиющие косяки исправил, но до сих про сомневаюсь в правильности работы распределения пищи.
Именно под распределение пищи запилил еще парочку файлов с логами. По логам все правильно. Но
почему-то социум потребляет в два раза сеньше еды чем предельное значение. Ну тут могут
играть роль женщины и дети, которые срезают потребление почти вдвое. Надо в общем чситать так:
взять общее клоичество людей, предстваить что они все мужчины и умножить нка среднюю пайку.
Тут и жолден получиться максимальный пищевой ресурс.
Изменил формат отчетов, чтобы легче их было парсить. В начале каждой строки отчета выводится
дата и id семьи.
Странно стала колебаться популяция. Она не осциллирует возле максимально возможного количества
людей, а идет резким пиком вверх, а потом снижается почти вдвое и регулярно проходит такие
волны возвышения и вымирания.
Генетического отбора тоже не видно - идет осцилляция вокруг средних значений трейтов. Возможно,
слишком мало людей для того, чтобы действовал отбор. Как я уже говорил: при возможном
теоретическом максимуме в 620 человек социум разрастался только до 140 человек, после чего
резко падал.
Реальное количество людей очень старнно корелирует (почти никак) с  теоретическим максимумом
людей. именно эздесь надо проверять.

17.06.2019(43)
Отлаживал процесс кормления. В итоге баланс сошелся.Не знаю точно, из-за чего заработало, но
отловил такую ошибку: у меня дети добывают в два раза меньше еды, чем взрослые. А женщины с
детьми получают на 10 единиц еды меньше за каждого ребенка. А у меня из-за рассогласования
условий девочки сначала проходили по категории женщин с детьми - ведь в их семье есть дети,
а потом этот паек женщины с детьми резался вдвое, из-за чего баланс не сходился.
Добавил множество отладочной информации в принтах нужно ее в будущих билдах прибить, чтобы не
засоряла вывод.
Показательных изменений генов пока не видно.
Добавил в Human.necrolog вывод генов.


18.06.2019(44)
Теперь и дети сдают часть пищи в общий бюджет на основании своего альтруизма. И стариков
теперь обязятельно кормят в зависимости от альтруизма родителей (им отдают от 0 до 27 процентов
 семейного бюджета). Я это сделал для того, чтобы родителям был стимул кормить соих детей.
 Потому что на симуляции альтруизм успешно стремился к нулю, никто не хочет делиться едой с
 домочадцами, доброта - это проигрышная стратегия. А если стариков гарантированно будут кормить,
 это повод вырастить альбруистичных детей и тоже их кормить, чтобы они кормили тебя в старости.


26.06.2019(45)
Добавил каждому жителю параметр score. Теперь за каждое действие начисляются определенные очки,
чтобы было легче искать интересных людей.
В прошлый раз я переделывал процедуру жентьбы. Сейчас опять что-то не в порядке. В некрологе у
отдельных личностей показывается что они в одно и то же время женились по два раза на одном и
том же супруге. Два раза вызывается процедура женитьбы (у обоих супругов).


27.06.2019(46)
Масштабную переделку затеял. Переписываю гены, чтобы можно было проще отслежтвать, как они
передаются. Теперь гены будут не просто циферками, а объектами, с указанием, откого они были
унаследованы.

Так же ввожу класс Fetus, чтобы ребенок появлялся во время зачатия, а не в момент рождения.
Так как в момент рождения его билолгический отец может быть уже мертв, а мать женится на
другом. В таком случае гены у новорожденного мальчика унаследуются от совершенно чужого
человека, а хотелось бы, чтобы как в реальной жизни. Поэтому в момент рождения он создается
эмбрион с заданным набором генов. Потом планирую, что после роджения класс эмбриона
трансформируется в класс ребенка (на этом этапе поведение по половому признаку не будет
отличаться). А ребенок уже после взросления трансформируется в мужчину или женщину - эти
классы уже будут различаться по поведеню.
Эмбрионы в социум не уходят, они являются частью матери (тут и пригодился бы класс Женщина
для обработки эмбрионов)

Новые гены заработали, но что-то я по ходу испортил. Теперь рост популяции происходит очень
медленно. Потом исправлю.


29.06.2019(47)
Убрал модуль hum_var, а его содержимое переместил в класс Health.
Почему у меня некоторые люди за раз женятся два раза, в результате выяснил, что ошибся.
Женяится они как надо. Просто у меня есть список супругов и даты свадьбы. Если за свою жизнь
супруги женились дважды, у мужа например жена будет в списки супругов указана два раза и каждый
раз будут указываться две даты женитьбы. ПРосто данные у меня не согласованы. Думаю заменить
свадьбы и разводы на такие сртуктуры: словарь, в качестве ключа указана дата, а в качестве
значения - супруг.
Можно и вовсе классом заменить - например, назвать Событие. С такой структурой:
дата - ассоциированный человек - тип события (рождение, смерть, свадьба. рождение ребенка).

Застопорился на одной штуке. В словаре {Date: Human}, я не могу выбрать последний объект,
потому что словарь не итерируемый. Есть неплохая идея использовать для этого OrderedDict из
collections. Но это потом, сейчас башка уже не варит. Или как-то сделать этот объект
итериерумым, хэш функуию к нему присобачить.
Добавил в soc_time метод hash и сделал сортирвку через лямбды. Теперь надо necrolog исправить.
Но это временное решение, надо использовать упорядоченный словарь, а то много костылей городить
приходится.

30.06.2019(48)
В некрологе сведения о супругах в другом виде переписал.
Нашел косяк. В распределении пищи с детей снималась их доля, чтобы складывать в общак, но в
общак не ложтлась.
Добавил класс Fetus. Из-за него кучу других классов перелопатить пришлось.
Добавил зачатие нескольких детей сразу.


03.07.2019(49)
Сделал статистику по племенам - это когда появляются новые семьи, но они помнят, от какого
предка произошли. Эена с мужем может развестись, но жена все равно останется в племени мужа.
Только если не выйдет замуж за  человека из другого племени.
В статистике показывт фамилию первого человека в списке племени, поэтому у племени может время
от времени меняться фамилия. По крайней мере у меня она меняется. Возможно это ошибка и фамилия
должна передаваться через поколения по мужской линии. Это нужно проследить.


04.07.2019(50)
Разобрался, почему фамилия менялась у глав семей. Дело в том, что приемеые дети не меняли
фамилию при усыновлении. Исправил. Теперь они меняют фамилию и отчество.

Небольшие заметки про то, как в дальнейшем можно расширить генетические состояние человека.
Чтобы не потерялись записи на бумажках.
У меня сейчас люди женятся совсем не принимая во внимание наличие детей у супруга. То есть
мужчины не принимают. Если мужчина одинойки, значит у него нет на воспитании детей - при
разводе они достаются жене.
Можно ввести еще два гена "чадолюбие" и "чистую кровь". Pedofilia отвечает за готовность
мужчины взять в жены женщину с детьми. При низком знасении - полный отказ рассматривать ее
как кандидата в супруги, а при высоких - приоритетный выбор женщины с детьми над бездетной.
Кроме тогочадолюбие должно выражаться в повышенном выделении еды на прокорм детям.
Для женщин это нейтрльный ген - за исключением повышенного пайка для детей. Хотя для женщин
это может влиять на ОСОЗНАННОЕ желание рожать много детей. Тогда как фертильность - это
неосознанное деторождение или даже скорее ВОЗМОЖНОСТЬ мног оражать.
Pure_kind - это опять  же мужская характеристика - любовь к своим детям и нелюбовь к чужим.
Мужчина будет неохотно жениться на женщине с чужими детьми. А в браке своим детям будет
выделять больше пищи, а чужим меньше.
Ну и неплохо бы продумать изгнание детей из семьи - если отец не любит приемышей или
мать-одиночка не может прокормить всех детей. Тогда какой-нибудь ребенок изгоняется.
В связи с этим надо продумать создание любимых  и нелюбимых детей в семье. По какому
признаку их любят? На основе генов? Насколько они сходи с родительскими - настолько и
любят? Или на основе полезных чачеств ребенка - сколько еды он приносит в дом. А то и вовсе
по случайным причинам.

Нужно ввести горе/счастье для людей. Хотя бы для начала как среднее количество потребленной
пищи. Счастье должно быть характеристикой накопительной, не прпадаюсщей и не возникающей в
один момент. Основная характеристика, которая влияет на счастье - это достаток в семье.
Например в сытые времена - рождение ребенка - это счастье, а в голодные - горе. Так же
счастье жолжно завистеь от семейных обстоятельств. Для общительного человека  одиночество
это горе. Он должен все сильнее стремиться вступить в брак. Для чадолюбивого - чем больше
детей - те мон счастливее. А смерть родственника (особенно ребенка) должно приносить горе.
А черствых людей смерть близких не должна сильно трогать. И рождение детей радовать не
должно.Черствость - это заглушение всех эмоций. Если в таком разрезе смотреть, то это
уже не неужтвчивость. Но так можно плодитьсущности до бесконечности.
Как при ээтом счастье или горе должно влиять на повседневное поведение человека пока
непонятно. Как-то на его работоспособность должно влиять. На способность добывать больше
пищи и на спсобность ее усваивать.
Кстати о работе. Можно ввести ген трудолюбия. Когда человек каждый цикл занимается добычей
пропитания.
Не фикисрованное значение работы, а скорее линейная функция - как повышается количество
работы при дефиците еды. Но графики так устроены, что если есть наклон, то должна быть и
точка отсчета.
У работы всегда есть оптимум: когда вокруг изобилие - много работать бессмыленно, так как
еда достается легко. А при дефиците еды, устлия затраченные на поиск пропитания просто не
будут отбиваться.

Воспитание детей и их взросление.
Ген для матерей какого типа детей рожать. Одного, но здорового либо много но мелких и слабых.
Допустим ребенок рождается с нулевыми характеристиками, но у него есть гнетически заложенные
способности. Оно возрастают по мере взросления. Чем больше ребенок ест, тем быстрее взрослеет.
Если у него высокие генетические характеристики, ему надо потребить больше пищи. То есть,
татантливый ребенок в одинаковых условиях будет взрослеть дольше, чем средненький. и
возможность размножиться получает позже.

Не обязательно сидеть с родителями до 18 лет, можно влиться в самостоятельную жизнь и раньше.
Если ребенок развил свои потенциальные характеристики он становится взрослым и может основать
собственную семью. А может остаться сидеть на шее у родителей - остаться ребенком и не
размножиться.
Насколько долго ребенок может просидеть на шее у родителей - комбинация альтруизма и чадолюбия.
Если родители кормят, то почему бы не посидеть?


04.07.2019(50)
Сделал подсчет средних генов для племени(выводится в "population.txt").
Избавился от переменной human.family_state. Давно я на нее смотрел. Абсолютно бестолковая,
особенно при наличии класса Family. Просто она была в ведена с самого начала разработки
программы, и куда меня занесет я совершенно не представлял.


06.07.2019(51)
Что-то делал. Не помню. Порядок пытаюсь в коде навести.


07.07.2019(52)
Переделал метод hall_of_fame. Теперь некрологи составляются не в самом конце симуляции, а по
ходу развития симуляции. При этом умершие предки не остаются в списке socium.forgotten, а
вычищаются из него после распечатки некролога. Я раньще думал, что они пропадают навсегда и
могут возникнуть проблемы с определением близких родственников, если напрмер между смертью
деда и рождением внука прошло больше 100 лет. Я опасался, что объект деда просто не
сохранится при очередной зачистке. Но это не так. В этом случае удаляется только одна ссылка
на объект. Но на этот объект можно сослаться таким образом: person.father. И дальше:
person.father.father. Таким образом все люди, у которых есть потомки, сохраняются в памяти.
Если потомки закончились, то да, скороее всего до них добраться уже нельзя. Разве что через
бывшую жену последнего представителя рода: person.ex_spouses[xxx].father.

Наличие матери в семье должно обеспечивать приемущество для детей. Раньше я сделал так, что
женщина получает меньше пищи за каждого иждевенца у нее на попечении. Так что еда фактически
пропадает. Можно еду не выбрасывать, а передвать эту долю, на которую соратился рацион матери
непосредственно в фонд детей. Не в общий бюджет, а только детям, чтобы отец из него взять не
смог.

Перевести обработку жизни людей из персон в семьи пока не получается. Список семей изменяатся
прямо в время цикла по нему , что довольно опасно. да и работает неправильно. Возможно
придется оставить, как есть.
Но в данном случае клдичество семей может только расти и они добавляются в конец списка.
Удаляются неактивные семьи позже, так что не ясно, что там такое. Моэет индексация сбивается
как-то.

При рождении ребенку в качестве отца может быть назначен не его родной отец, а муж матери.
При этом будет неправильно определяться круг ближайших родственников и могут появиться
проблемы с браками.
Увидел вопиющий случай, когда сын женился на собственной матери. А следом за ними дочка вышла
замуж за батю. Дело в том, что мать - новоприбывшая и круга близких родственников у нее
вообще нет. А у сына - тольтко мать и отец. Но с пустым мнгожеством может что угодно
пересекаться. Вот они и поженились. Нао в круг ближайших родственников самого человека
добавлять, чтобы не было казусов со странниками и их детьми.
Пи обработке людей по семьям постоянно происходит вырождение. Не могу понять почему.
Посмотрел выкладку по семьям, вроде все правильно. Такое ощущение, что мрут от вырождения.
Семьи объединяются и не могут жениться друг на дружке.
А при обработке по людям все хорошо. Развитие идет, никакого вымирания. Буду дальше
разбираться, но уже потом.

21.03.2019(54)

Хочу реализовать новый метод распределения еды.
1) До трех лет ребенок не добывает еду, а кормится за счет родителей.
2) Начиная с трех лет количество пищи, добываемой реьбенком линейно возрастает до взрослого
состояния.
3) Сейсас устроено так, что первичное распределение пищи происходитв один проход. Всем раздается
одинаковое количество пищи. Дети получают вдвое меньше, а излишкт просто выбрасываются. Предлагаю
раздавать эти излишки на втором проходе, но не всем, а случайным 10%. Выдавать в соответстввии с
удачей человека, а не делить поровну. Кончился остаток - остальные остаются без добавки.

Два гена:
    Возраст взросления - тот возраст, до которого человек остается на попечении родителей. Он
считается ребенком и размножаться не может.
    Удача - при повторном распределении пищи получает большую порцию. А возможно и в ходе борьбы
за пищу имеет шанс победить более приспособленного.

Так же необходимо вовлечь дедов в воспитание внуков. Они выбипают себе любимого внука и небольшую
часть еды отдают ему. Можно выборы любимого внука устраивать периодически. Вряд ли каждый год. Но
если количество детей меняется, можно устраивать перевыбора любимчика. Как я уже однажды писал,
любимчика можно выбирать случайно, а можно по самому близкому геному. Так будет интереснее.
Тут еще такой прикол - у стариков могут быто десятки внуков от разных семей. И как-то вних нужно
ориентироваться постоянно. Кулдаун для любимчика назначить, равный трем годам например.
Ну и опять же, пускай у отца с матерью будет свой любимчик.
Если ребенок один в семье, все его любят, балуют, о нрастет в сытости. Поэтому первые дети по
идее должны быть сильнее последующих.

Сделал так, что дети до тех лет сами пищу не добывают. Но получается так, что если в семье есть
старшие дети, они получают пайку от родителей, плюс сами половину взрослого рациона добывают.
А маленькие обходятся только тем, что получают от родителей. В условиях дефицита пищи оони
быстро погибают.

У меня раз за разом популяция вымирала, из-за того, Что маленткие дети не выживали. Запустил
симуляцию на очень большом количестве людей и нашлась нужная комбинация генов. То что упала
склонность к разводам, это понятно. В полной семье проще пищу добывать. Но самое парадоксальное,
что у обоих полов сильно упала приспособленность. Видимо это позволяет сильно на себя одеяло не
тянуть  и много отдавать детям. Надо этот вопрос проработать.

22.03.2019(55)
Альтруизм - это редкая штука. Чудом у меня получилось на него выйти, чтобы популяция не
заглохла. Сегодня запускал симуляцию раз пятнадцать, и она у меня стабильно вымирает после
300 лет симуляции. Замучился руками запускать. Поэтому пишу автозапускалку, чтобы при
преждевременной смерти популяции она запускала симуляцию снова.
Сделал, работает. Запустил на исполнение. Не знаю, за сколько попыток он справится.

Нужно еще жизнеописание социума не принтами выводить, а в файл писать, чтоб вывод консоли
не засорялся.

23.03.2019(56)
Добавил два гена:
fert_age: возраст наступления спсобности к деторождению. Чем больше, тем позднее меловек может
зачать ребенка.
fert_satiety: минимальная сытость, при которой невозможно зачать ребенка, чтобы голодные
родители не плодили голодных детей.

28.03.2020(57)
Убираю вывод хроники событий из консоли в файл. Довольно много всего перелопатить нужно.

Хотелось бы для начальной инициализации смиуляции сделать не молодых людей, а сразу семьи с
детьми и стариками. Потому что симуляция идет всегда неравномерно. Сначало большой вздет
числености взрослых и падение детей, а потом медленный выход на режим непрерывной популяции.
Лучше генерировать сразу семьи. Только делать это без времени. Сгенерировалось первое поколение,
сразу поеделились супруги, потом сразу посчитались дети. На следующем шаге все взрослые стали
стариками. Дети стали взрослые и женились и у них появились дети. То есть, один шаг - одно
поколение. Так можно прокрутить несколько раз, а потом всех мертвых отбросить, а живущим
переназначить уникальные номера, чтобы с 1 начинались. А дальше запустить детальную симуляцию.


31.03.2020(58)
Из-за того, что у меня постоянно вымирал социум, я даже сделал обертку, которая постоянно
запускает смиуляции со случайными геномами дт тех пор, пока цивилизация не продержится
заданный срок. Тут эти симуляции крутились десятками и никак не могли отработать успешно.
И тут наконец-то получилось. Причем, судя по графику социум не сильно страдал - бутылочное
горьылко было 297 человек при изначальной популяции в 1000 человек.
Геномы, которые смогли:
| enhr:  9 | fert:  8 | fitn:  7 | abst:  9 | hars:  6 | altr:  7 | fage:  4 | fsat:  3
| enhr:  9 | fert:  7 | fitn:  9 | abst:  8 | hars:  6 | altr:  9 | fage:  3 | fsat:  4
| enhr:  9 | fert:  9 | fitn:  3 | abst:  9 | hars:  4 | altr:  9 | fage:  6 | fsat:  5
| enhr:  9 | fert:  9 | fitn:  5 | abst:  9 | hars:  3 | altr:  9 | fage:  3 | fsat:  2
| enhr:  9 | fert:  7 | fitn:  3 | abst:  6 | hars:  4 | altr:  9 | fage:  4 | fsat:  2
| enhr:  9 | fert:  5 | fitn:  2 | abst:  9 | hars:  3 | altr:  9 | fage:  5 | fsat:  3
| enhr:  9 | fert:  5 | fitn:  5 | abst:  9 | hars:  5 | altr:  8 | fage:  2 | fsat:  3
| enhr:  9 | fert:  8 | fitn:  9 | abst:  8 | hars:  5 | altr:  8 | fage:  3 | fsat:  3
| enhr:  9 | fert:  8 | fitn:  6 | abst:  8 | hars:  5 | altr:  9 | fage:  5 | fsat:  4
| enhr:  9 | fert:  6 | fitn:  4 | abst:  9 | hars:  5 | altr:  6 | fage:  2 | fsat:  4
| enhr:  9 | fert:  9 | fitn:  6 | abst:  8 | hars:  2 | altr:  8 | fage:  2 | fsat:  5
| enhr:  9 | fert:  7 | fitn:  4 | abst:  8 | hars:  4 | altr:  7 | fage:  4 | fsat:  2
| enhr:  9 | fert:  7 | fitn:  3 | abst:  8 | hars:  8 | altr:  9 | fage:  3 | fsat:  4
| enhr:  9 | fert:  8 | fitn:  8 | abst:  9 | hars:  4 | altr:  9 | fage:  5 | fsat:  4


Что за ошибка такая, в hall_of_fame у всех людей в генотипах стоит "нет". Не замерил, 
чтобы гены отличались от родительских. Хотя генотипы у людей разные.
	enheri:  9 ( 9)| нет |
	fertil:  7 ( 7)| нет |
	fitnes:  5 ( 5)| нет |
	abstin:  6 ( 6)| нет |
	harshn:  4 ( 4)| нет |
	altrui:  8 ( 8)| нет |
	fert_a:  3 ( 3)| нет |
	fert_s:  9 ( 9)| нет |


04.10.2020(58)
Добавил еще один ген - вероятность мутации. И под него переделал наследование генов. Чем
больше значение гена, тем меньше вероятность мутации. Если мутация случилась, то определяется
величина, на которую должен измениться параметр. Он поределяется по распределению гаусса, но
при таком распределении в большая часть резульиаитв укаладывается в диапазо до единицы:
получается что ар результате ммутации значение гена просто не будет меняться. Поэтому я взял
значение функуии гауса со смещением +-1. При этом мутация гаранторована.

Намудрил со значением default. Теперь у многих людей в геноме указано, что ген ни от кого не
наследоваося, и в нем стoит значение по умолчанию.

И еще что-то я сделал, что все рожать перестали. У всех 0 детей.

26.10.2020(59)
Дети все еще не рождаются. Тут надо смотреть на сложное взаимодействие человека, генома и
эмбриона. Эмбрион рапортует, что он вроде как рождается, а сообщение о рождении в хронику не
пищется. Хотя, возможно это связано с теми нововведениями, которые добавил в этой версии.
Легкое нововведение - заменил часть методов в классе Human на свойства - так оно органичнее.
Ну и основное нововведение теперь в качестве родителей не могут быть None. Добавил Специальный
объект-заглушку - NoneHuman, для того, чтобы обрабатывать людей единообразно. Балуюсь с модулем
typing, а конструкцию Optional[Human] использовать не хочется, потому что там постоянно надо
проверять, что объект не None. Так вот, такое изменение поломало логику, теперь у меня люди не
рождаются, а появляются как взрослые. Я проверял - у них в качестве матери стоит NoneHuman.
То есть потомки не являются родственниками своим предкам. В эту сторону и нужно копать.

26.10.2020(60)
Начал разбираться в втеме наследования генома, но так и не разобрался. Основное тут, что
наследуют геномы только эмбрионы, а взрослые, они же странники, получают готовый геном.
Так вот, при наследовании генома у меня периодически происходят вылеты, потому что не
определен предок, от которого наследуется геном.

04.11.2020(61)
Починил баг с генами предка. В общем, он был очевидый. При записи в файл hall_of_fame истории
человека идет обращение к его геному - в том числе определяется, какой геном был у его предка.
Но все люди из первой популяции не имеют предков. А я почему-то изнасально не хтоел предку
присавивать значение NoneЮ чтобы тип был четкий Human, а не Optional[Human]. Поэтому при
инициализации гена атрибут "предок" инициализировался. Он инициализировался только при зачатии
эмбриона - когда выбирается, от какого из родителей наследуется ген. А если в социум
приходил взрослый человек, ну его генов не было предков. Отсюда и вылетала ошибка обращения
к неизвестному атрибуту. Решилось тем, что я инициализировал предка значением None. Эту
проблему можно решить, если дать нелюдям геномы. Чтобы даже у генов странников были предки.


04.11.2020(62)
Популяции дохли раз за разом, поэтому прешил поиграть с коэффициентами. Изменил коэффициент
разводов, чтобы разводились пореже а так же увеличил в три раза шанс забеременнеть. Вроде
дела получше пошли. Основная проблема, из-за которой популяция не растет - это то, что дети
до трех лет не добывают пищу и питаются крохами с родительского стола, очтего сильно мрут.
Нужно переделывать процесс питания, чтобы младенцам посытнее жилось, а то они у меня самые
уязвимые получаются.

В связи с этим выделил метод распределения еды в отдельный класс. Он ночень солжный и его
надо разбивать на части, чтобы отладить, потому что есть стойкая уверенность, что он
работает неправильно. Но это уже потом буду делать.

05.11.2020(63)
 Разбил класс FoodDistribution на методы. Нужно Еще отделить стстистическо-отладочные методы
 от тер, которые непосредственно рассчитывают пайку для людей.
 Возможно так же нужно бутет перенести методы распределения еды внутри семьи из класса Family
 в FoodDistribution. Но пока я не уверен. Хотя логично, что семья непросредлственно не будет
 затрагивать еду. А будет один класс, ответственный за рпспределение еды между людьми, семьями,
 племенами.
 Изменил формулу рассчета мутаций, до этого она неправильная былаСейчас получается, что мутация
 каждого гена считается отдельно. При максимальном значении мутаций вероятность мутации гена:
 0.4. При любой длине генома будет мутировать определенный процент генов (зависит от значения
 гена mutation).

10.11.2020(64)
Надо преределать возрастную систему людей.
Вместо многочисленных проверок на тот или иной возраст надос делаать одну проверку, которая
возвращает стадию развития человека. Сделать перечисление с возоастами: младенец, ребенок,
подросток, взрослый, пожилой, дляхлый. Даким образом можно различные стадии развития не
привязывать к конкретным возрастам, а вычислять разные стадии исходя из генов. Ту же
половозрелую стадию или возраст дряхлости.
Это я хочу сделать в связи с тем, что человек в разнве возраста (по мере взросления) должен
насыщаться разным количество еды. То есть у меня сейчас младенец требует столько же еды,
сколько и взрослый. А я хочу сделать коэффициенты: младенец поребляет в 4, ребенок в 3, а
подросток в 2 раза меньше, чем взрослый человек. И если бы остались старые проверки на возраст,
там бы была огромная куча ифов. А так я буду получать числовой индекс, что гораздо проще.
В общем добавил свойство объекта age_stage. При этом всякие is_baby и is_adult никуда не делись,
потому что при начальной генерации поуляции надо определять тадию человека исходя из его
возраса. Он может возникнуть подростком, а может и взрослым. Для определения служит метод
get_stage_by_age.
Само рандирование пищи исходяиз возраста пока не делал. Опять же надо отрефакторить
многочисленные person.is_adult на перечисление Stage_of_age.ADULT и т.д.

11.11.2020(65)
ТАкой вопрос со Stage_of_age. Дело в в том, что стадия развития пока нигде не отслежтвается
и актуальные ее значения не применяются. Получается, что каждый ход нужно проверять возраст
каждого человека. Той самой функцией, в которой куча ифов. Не очень эффективно получается.
И получается что переменная не нужна. Храниить особо нечего, если кадлый раз приходится
вызывать функцию (ну может в свойство ее превратить). Короче, надо думать.
Придумал. Надо телать таймер стадии развития. И проверять только его. Если таймер истечет,
переходить к следующей стадии. И снова проверять только таймер.
Сделал смену возрастного статуса через перечисление, список состояний перечисления и словарь,
в котором состояние указывает на пороговый возраст, когда надо сменитьс статус. Пришлось
кроме дряхлости (SENTILE), добавить техническое состояние UNDEAD, которе заводит таймер на
сто тысяч лет. Конечно, до такой даты никто не доживет, но реализация смены возрастов
устроена таким образом, что когда деловек доживет до 70 лет и станет дряхлым, ему надо будет
заводить следующий таймер, который берется из следующего состояния - а его нет! Пришлось
добавить и срок кобольше поставить.
Эта реализация пока что на тестовом примере. В живом коде потом реализую. Вообще, мне
понравилось использовать перечисления. Можно моного куда их присобачить. Например к полу
человека или к геному.

12.11.2020(65)
На скорую руку добавил сохранение логов в паку стекушив временем. Вроде как каждая симуляция
сохраняется в собственную папку. Работает еще криво, не все логи правильно сохраняются, ну
уже что-то. Вообще надо копироватьс исиему логов из проекта "Ареал".
Выделил обработку возрастных стадий в отдельнйк класс, чтобы не захламлять класс Human.
Получилось довольно аккуратно. Правда пока еще не проверял, нормально ли эти стадии сменяют
друг друга. Но если люди женятся и рожают детей, то более-менее адекватно получается.
лучше это можно будет выяснить, когда будет реализована уменьшенная порция еды для детей.
Можно будет следить за сменой возрастных стадий по тому, как ребенок насыщается.

Обратить внимание на переменную have_food_prev в классе Health. Кажется она не работает.
Ни на что креме вывода статистики она не влияет, невернапя статистика может ввести в
заблуждение. Она должна показывать изначальное количество еды, выделенное на человека.
Функции have_food_change have_food_equal изменяют значение have_food_prev. И так как
эти функции могут вызываться несколько раз первоначальное знкачение затерается.
Значение переменной выводится в Family.food_display, а так же участвует в формировании
переменной budget_prev (первоначальный пищевой бюджет семьи), которая выводится в том же
методе.

Попробовал внедрить коэффициент насыщения для детей разного возраста, но ничего не ввышло.
Лезет какой-то рандом. По моему, у меня серьезные проблемы с отслеживанием возрастного
статуса у людей. Нужно кропотливое логирование.


14.11.2020(66)
Починил неправильное определение возрасной стадии у людей, а также неправильное вычисление
коэффициента питания. Но дети все равно дохнут, как мухи. На посмотреть, как формируется
семейный бюджет. Вообще, все что касается питания - реалтзовано очнеь сложно, там черт
ногу сломит. По моему буджет делится на двые части - половина тратится на детей, а вторая
половина отходит взрослым.
Сейчас увидел забавную ситуацию. В семье женщина с 13 детьми. Мужа нет. Эенщина вообще не
добывает еду из-за большого количества иждивенцев. А дети добывают по половине пайки и
какую-то часть передают в семейный бюджет. Потом бюджет делится на две части, после чего
мать питается очень хорошо, а дети очень скудно.
По идее способность матери добывать пищу не должна линейно зависеть от количества детей,
скорее геомертически. Где каждый последующей ребенок отвлекает мать в два раза меньше,
чем предыдущий.
Ну или не нужно присматривать за подростками, сами как-нибудь разберутся.

Теперь вроде по настоящему починил переход на следующие возрастные стадии. Дети потребляют
еду в соответствии со своими стадиями (меньше, чем взрослые). Если дети не голодны, они
возвращают еду в общий котел. Но она достается не другим детям, а родителям.
Чтобы грамотно разделить еду между членами семьи, надо ее не последовательно раздавать,
а делать предварительные рассчеты - может кто откажется, тогда нужно пересчитывать.
Или если большая диспропорция между членами емьи - кто-то много ест, а кто-то мало.

15.11.2020(67)
Такие мысли:
1) Возраст отнасоедовать от Date и включить в него Stage. Возраст не равноценен дате.
Можно сдедать метод, чтобы возраст сам повышался каждый тик. А если включить в него класс
Stage, то и возрастные стадии будут обрабатываться автоматически, их не нужно будет
вызывать из класса Human.
2) Создать отчет, который бы отслеживал генетических предков человека. У каждого гена есть
параметр "предок". Поэтому можно проехаться по всей цепочке предков и выявить, кто был
носителем изначального гена. Так можно определять, кто был самым плодовитым предком у
популяции. От каковго предка унаследовало конкретный ген большинство ныне живущей поуляции.
Так и племена можно отслеживать. Хотя нет, это не племена, а расы. Племена - это  про
социальные связи, а не про генетические.
3) Создать события. Под событием я имею в виду любые вести в жизни человека. Брак, развод,
беременность, роды. Все этоможно вписхнуть в некий класс событие: в которм будет
описываться срок начала, срок конца, люди, которых затрагивает событие, инициатор события
и непостредственно то, что должно происходить.Унифицировать интерфейс, чтобы не писать
отдельные вызовы каких-ьо событий, а прогонять их цв цикле. Все события стоят в очереди
и однообразно обрабатываются.
4) Переделать семейное кормление так, чтобы предварительно рассчитывались пайки и не
было диспропорции в потреблении у отдельных членов семьи.
5) откалибровать питание так, чтобы ребенок до 13 лет, оставшийся без семьи не имел
возможности выжить самостоятельно (исключая вариант изобилия). Потому что вся эволюция
скатывается к тому, что женщины начинают рожать при любом значении сытости - главное
родить, а выкармливать детей особо не надо. МОжно умирать, а ребенок как-нибудь сам
проживет. Дотянет до стадии размноженияи передаст гены дальше.
6) Сытость матери должна влиять на хилось ребенка. Если беременность проходит в голодный
период, то ребенок изначально  должен получить срок жизни меньший, чем ребенок, выношенный
сытой матерью. А то и вовсе умереть при родах. А то у меня сейчас все одинаковыми
рождаются. И хорошее питание не является фактором отбора.
7) В классе FoodDistribution у меня есть отдельный метод recalculate_food_distribution,
который не выполняет полезной нагрузке, а тупо перестчиывает, правильно ли происходит
распределение пищим ежду людьми. Естественно, что он работает неправильно. ДУмаю, что стоит
вынести его в отдельный метод, чтобы он просто логировал питание. И чтобы его можно было
оегко отключить без ущерба для симуляции. Вообще, можно перекинуть его в модуль статистики.
Меня смущает то, что у класса  FoodDistribution нет отдельного метода, ответственного за
логирование. При том, что программа ведет аж три лога куда пишет распределение еды на
разных этапах.
8) Младенцы все еще самая уязвимая группа населения. Дети самостоятельно добывают пищу и
при дележке даже часть распределенной еды возвращают, потому что у них есть своя. А вот
у младенцев своей еды нет и они получают крохи.

Переделал уменьшение добываемой пищи в завистмости от числа детей у нее на руках. Первый
ребенок уменьшает добываемый паек на 25%, второй еще на 12,5%. Траф за каждого
последующего ребенка уменьшается в два раза. И так до 6 детей. Дальше не ситается, так
как добавки получаются несущественными.

19.11.2020(68)
Запихнул класс Stage внутрь класса Age, который наследуется от Date, но  выражается не в
календарныой жате а в возрасте (во время котрого случилось событие). Это позволило скрыть
класс Stage и теперь у класса Human на одну переменную меньше. Возрастная стадия за
пределами самого возраста в общем-то и не нужна.

21.11.2020(69)
Решил, что надо избавляться от кучи ифов и что надо обрабатывать питание людей однообразно.
Ввел два словаря: то, насколько эффективно в зависимости о возраста люди добывают еду. И
то, насколько эффективно в зависимости о возраста они ее усваивают. Маленькие дети не
добывают еду и усваивают ее намного лучше чем взрослые (из-за своего небольшого веса,
который в симуляции пока не учитываются). Старики плохо добывают еду и плохо ее усваивают.
Единственный if касается женщин с детьми  - чем больше детей, тем хуже они добывают еду.
Совсем хорошо было бы, если бы штраф учитывал возраст детей. Подростки на добычу еды почти
не влияют, а младенцы требуют к себе много внимания.

Изменил формулу расчета начала фертильного возраста. Убрал привязку к абсолютным числам,
вместо этого привязал к стадиям развития. Первым делом добавил стадию Young (начинается
в 17, заканчивается в 28). Теперь начало фертильной фазы привязано к стадиям Teen и Young
(от 12 до 28 лет). Ну и деторождение происходит в период от начала фертильной фазы до
начала стадии Aged. Проверяются только женщины. Для мужчин вроде как максимальный возраст
зачатия не ограничен.
Отрефакторил проверку на беременность длинные ифы заменил на цикл по супругам.

22.11.2020(70)
Переписал реализацию пола персонажей с булевой на перечисление Gender.MALE, Gender.FEMALE,
так как раньше было не вполне понятно, что это за нули и единицы такие. Зато раньше списки
индексировать по полу легче было. Сейчас кое-где списки пришлось заменить на словари
(подсчет среднего значения генов по популяции), а в добывании фамилий пришлось условную
конструкцию делать, так как фамилии помещены в кортежи.

В случае, если дети голодают надо чтобы родители давали больше еды детям, чем было
установлено альтруизмом. У взрослых  есть параметр fert_satiety. Тот уровень голода, при
котором они могут размножаться. Если у детей satiety падает до этого значения и оно меньше,
чем у родителей, пускай они жертвуют частью своего пайка. В таком случае они сами могут
умереть от голода, а вслед за ними умрут и дети. Но так будут отбраковываться люди с генами,
заставляющими бесконтрольно размножаться.

Ну и плохое питание должно быть причиной рождения слабых детей. Нужно в классе
беременности считать питание матери и на основе этого числа рассчитывать предполагаемую
жизнь ребенка.

Геном перевести на перечисление. Сейчас обращение к генам происходит через строковые
литералы. Основная их проблема в том, что по ним нельзя провести поиск в программе,
они не переменные. Перечисления эту проблему решат.

Добавил метод make_food_supplies_new в классе Family, чтобы обрабатывать создание
семейных запасов более однообразно, но пока она работает некорректно. У младенцев
какие-то огромные запасы пищи возникают. Старый метод удалять не стал, надо  разбираться.
Подозреваю, что пресловутая переменная genetics.Health.have_food_prev может мешаться.
Вроде писал, что она может меняться несколько раз на круг и выдавать самые недостоверные
данные.

23.11.2020(71)
При первоначальном распределении еды между людьми много пропадает. Эта еда отправляется
в переменную food_waste. Появилась идея добавлять эту пищу на следующем ходу к пищевому
ресурсу. Так количество еды увеличится. На следующем ходу тоже будут потери, но они
приплюсуются через ход. Так весь пищевой ресурс будет оставаться.
Добавил такую фишку, но количество ведет себя довольно хаотично, а вместе с ним и
количество людей. Пока закомментировал, так более предсказуемо получается.

Отладил новый метод make_food_supplies. Просто при замене на цикл вместо переменной
бегающей по всем членам семьи оставил переменную, в которой хранился глава семьи, отсюда
и глюки.

18.12.2020(72)
Сделал новый метод расределеняи пищи. Тпепрь он работает более менее адекватно. То есть
сначала подсчтывается процентная доля каждого члена семьи от общего пайка. Зависит от
возраста и эгоизма. Потом происходит распределение исходя из получившейся пропорции. Если
человеку достается слишком много, то он возвращает лишнюю пищу в общий бюджет, и
происходит повторное расределение еды между оставшимися членами семьи.
И как обычно, плучилось, что самые маленькие голодают, потому что им выледяется в три раза
меньше пищи, чем взрослым, а сами они пищу пока не добывают. Поэтому вынуждены голодать.
Тогда решил убрать учет возраста из дележа. Всем достается одинаковая пайка (тут влияние
только эгоизм может оказать). Лишнюю пищу дети все равно возвращают. Вроде умеать пореже стали.
Хотя все равно мрут как мухи.

В очредной раз обращаю внимание, что гены "fitness" и "abstiention" все еще какие-то
невнятные. Особенно "abstiention" - этот ген первым растет до максимального значения, потому
что у него нет никаких отрицательных сторон. Надо их балансировать. я уже приспособленность
переименовал в силу, но сильно это не помогло. Вообзе получается, что умеренность и сила -
это противоположные края одной шкалы. и возможно умеренность надо выкинуть. По идее она
должна помогать переживать сосвем голодные годы, а в сытый период особого воздействия не
оказывать. Да и вообще, иметь негативные свойства. Понятно, что это экономия на всем -
на организме в том числе. Все негативные стороны должны быть сильнее. Замедляется сбор
пищи. Усиливаются родовые травмы. Сокращается возраст детей. Усиливаются эффекты старения.
А сила наоборот - облегчает добычу пищи. Но организм должен больше энергии тратить на
поддержание сил.
В общем надо переделывать эффекты от генов. Но для этого надо немного переписать сами
гены. Сейчас они у меня вызываются как словарь от строковых литералов. А строки надо
переписать в перечисление. Потому что строки не плдчеркиваются, как переменные, их трудно
искать в редакторе.

16.11.2021(73)
Решил немножко посидеть над прогой, раз уж я в отпуске. НА предыжущем этапе программа вылетала с
ошибкой. Прикол в том, что про эгоизме=0 человек для себя брал 0 пищи из общей копилки. А если
человек был один в семье, этот ноль пробирался в знаменатель и получалось деление на ноль. Ввел
небольшое базовое значение, чтоб ноль не появлялся.
Вообще, программа работает весьма странно. Несмотря на повальный голод число людей увеличивается
экспоненциально. Из умерших все подряд многодетные. Видимо, очередная константа сбилась. Надо
какие-то тесты делать на вычисление среднего количества замужеств и средней частоты беременностей.
Возможно из-за того, что в первый месяц младенцы пищи не треьуют и никакого урона для здоровья не
получают.
Можно штрафы для голода увеличить.
Ну или протекание беременности сделать. Если мать плохо питается, то случается выкидыш или ребенок
с заведомо короткой жизнью.

16.11.2021(74)
Нашел ошибку. Напереправлял такого, что перестала вычисляться satiety. Она всегда была равна 5.
Из-за этого и урон здоровью вычислялся неправильно. Мультипликатор голода перестал действовать.
Хотя детей у среднего человека все равно мног ополучается. По 4 где-то.
Хотя это может быть из-за того, что люди разводятся и женятся, и дети учитываются по нескольку раз
- для каждого мажчины, в семье которого они воспитывались. Эту гипотезу нужно проверить.

18.11.2021(75)
Пытаюсь разобраться с семьями, и на более общем плане с племенами. Пока идея такая. Когда родители
разводятся, мать должна забирать всех детей с собой. В том числе и детей мужа. А муж пусть
отправляется в свободное плавание. Племя матери и детей должно меняться на то племя, которое у нее
было когда она повзрослела и вышла из родительской семьи. У детей социальный отец становиться равным
None, а отчество меняется на отчество биологического отца. Соответственно, переменные father mother
становятся не очень нужны, так как они дублируют переменные biological_parents и social_parents.
Причем переменная social_parents должна выглядеть так: Dict[FE, List[Human]], потому что у одного
ребенка может смениться не сколько социальных мам и пап. Тут еще даты обретения новых родителей
неплохо бы прикрутить.
А статистику надо считать по биологическим родителям, потому что не нужно кадому мудику в плюс
засчитывать чужих детей, которых он воспитывал полгода а потом раазвелся.
Ну или мгновенную статистику по текущим родителям, так сказать social_parents[FE.FATHER][-1].

19.11.2021(76)
Начал переделывать родителей в виде класса. Сделал биологических родителей. Основная работа будет
над социальными родителями. Их нужно в виде списков отцов и матерей сделать.

19.11.2021(76)
С социальными родителями все тяжелее, чем кажется получается. Родители создаются из семьи. У первого
поколения популяции нет семьи. Их родители - это болванки NoneHuman. А тут получается, что мне надо
создавать семью NoneFamily. В котрой родители - это два NoneHuman разного пола. Получается, что
нужно модифицировать класс NoneHuman. А еще нужно сделать класс, производящий пустые семьи.
Вообще, мне кажется что присваивать социальных родителей не обязательно. Они могут быть пустыми.

20.11.2021(77)
Как смог сделал добавление виологических и социальных родителей. И даже Пустые семьи желать не
пришлось. Модифицировал класс Parents. Если на вход ему не полается семья, то создаются два пустых
родителя NoneHuman.
Но попутно что-то сломал. Люди очень сильно дохнуть стали. Такое впечатление, что они не питаются.
Посмотрел на уменьшение жизни от голода - а там никакой еды у людей нет изначально. Видимо что-то
стер по ходу дела.
Посмотрел дифы. Сходу не заметно, чтобы что-то важное удалилось. Придется отлаживать по шагам.

20.11.2021(78)
Нашел ошибку. Я при генерации первых поселенцев сделал их всех новорожденными. Понятно почему они
пищу не добывали.
Дичь какая-то:
1039:0| TEAPOOC|---- питание ---------
1039:0| TEAPOOC|Запасы:   55.3
1039:0| TEAPOOC|Первонаяальное распределение:
1039:0| TEAPOOC|	 глав ( 26)| 0000095| 55.4% -  30.6 еды
1039:0| TEAPOOC|	 жена ( 36)| 0000363| 44.6% -  24.6 еды
1039:0| TEAPOOC| жена | 0000363| доля: 142.5| идеально: 120.0 взято из запасов:   2.2| остаток:   53.1|
1039:0| TEAPOOC|	ПЕРЕРАССЧЕТ (1 членов семьи):
1039:0| TEAPOOC|	 глав 1.000

1039:0| TEAPOOC| глав | 0000095| доля: 184.0| идеально: 120.0 взято из запасов: -10.9| остаток:   64.0|
TEAPOOC| осталось запасов:64.0
1039:0| TEAPOOC|КОРМИМ СТАРИКОВ: 1 человека, каждлому по  64.0 еды
1039:0| TEAPOOC|окончательное распределение:
1039:0| TEAPOOC|	 глав ( 26)| 0000095| 999.0% - -10.9 еды
1039:0| TEAPOOC|	 жена ( 36)| 0000363| 999.0% -   2.2 еды

22.11.2021(79)
Исправил ошибку передачи племени наследникам. Функцию, когда при равзоде жена вместе с детьми
возвращается в племя своих родителей не делал пока.

22.11.2021(80)
Сделал вычисление разницы между геномами - чтобы потом влиять на шанс пожениться. Чтобы люди
выбирали наиболее близких генетических партнеров. Или наоборот. Чтоб какая-то борьба геномов была.
Так же сделал, чтобы можно было в начальной популяции генерить людей с несколькими геномами, а не с
одним. Не мешало бы тогда сделать парпметр "раса", для каждого генома она будет своя. Так можно
будет следить зп соревнованием рас.
Все таки сделал возможность пожениться в зависимости от логарифма разницы генов супругов. Чем ближе
геномы, тем вероятнее свадьба. Не однозначные результаты получаются на гистограмме разницы геномов.
Есть один пик около нуля, что обьяснимо, и еще один пик на некоторм отдалении, демонстрирующий
заметную разницу в генах.

23.11.2021(81)
Расу можно реализовать следующим образом: это словарь, где в качестве ключей будут изначальные
расы, созданные при генерации социума, а в качестве значений - процентное соотношение изначальных
рас в наследственности каждого человека.
При этом странников нужно запускать только тех рас, которые уже естьв пуле. Сейчас это у меня
устроено так: странники имеют геном последней сгенерированной расы. Это будет вносить искажения в
статистику выживаемости рас. Поэтому нужно либо полностью отключить странников, либо равномерно
присваивать им ииеющиеся расы.
В общем, сделал так, что при разводе жена возвращается к племени, в котором она воспитывалась,
когда была девочкой. То есть к племени, к которому относились ее родители на момент взросления.

23.11.2021(82)
Попытался tribe_id сделать атрибутом Family, а не Human, в результате ошибки посыпались.
Разбираться уже сил нет. На потом отложу.

24.11.2021(83)
Была такая проблема, что после подсчета статистики, тети вышедшие из семьи вновь возвращались в нее.
То есть у человека была своя семья, но он еще дублировался в совей прошлой семье.
Нашел эту ошибку в методе, где считалось сколько человек в каждом поемени. Если семья
входит в племя, то лоя начала этому племени присавивается список всей семьи. А потом, если находится
другая семья входящая в племя, то этот псписок дополнялся оператором expand. Проблема оказалась в
том, что я переменную, считающую людей в племения я отправлял не копию семьи, а ссылку на список
семьи. Естественно, что при расширениисписка племени все людир из племени добавлялись в первую
семью. Но программа все равно вылетает с ошибкой, теперь с другой.

24.11.2021(84)
Исправил еще одну ошибку. Если в семье умирали оба родителя и оставались несовершеннлоетние дети,
этим детям не передавался tribe_id. И в словаре, распределяющим людей по племенам, возникал пустой
ключ, что приводило к ошибке.
================================================================================
TODO:


Если вводить симуляцию любовных отношений, то делать так: если пара при  первой встрече 
нравится друуг другу, то они начинают встречаться. Срок отношений длится например от 
месяца до двух лет. 
Пока они встречаются эта пара исключается из пула подбора кандидатов на женитьбу.
Или так: если пара встречается, у них каждый тик происходит бросок на то, чтобы 
пожениться или разорвать отношения (тут конечно должны быть дополнительные модификаторы, 
зависящие от характеристик персонажей). Если разбегаются, то ищут новых партнеров 
(и получают два года штрафа на то, чтобы сойтись опять). Тут получается у персонажа 
должен быть список бывших любовников.

Допустим, я сделаю карту, на которой расселяются жители. На карте будут плавно меняться
условия. По вертикали температура, по горизонтали влажность. Соответственно расселение
будет вестись в зависимости от приспособленности людей к местным условиям.
Тут еще важная вещь - на земле условия не меняются плавно. Например, по мере снижения
температуры вода вдруг превращается в лед, а это резко меняет условия жизни.
и вот еще одно обстоятельство - допустим на севере живут морозоустойчивые, а на юге -
теплолюбивые. А если ввести резко континентальный климат - когда летом жарко, а зимой очень
холодно - как на это будут реагировать жители? Для этого надо ввести гены, чувствительные
к внешним условиям. Которые будут включаться при определенных внешних обстоятельствах. Да и
внутренних тоже. Например, человек молодой или старый, худой или толстый.

Для суровых климатических условий можно было бы ввести режимы спячки и суперактивности.
В спячке человек не потребляет еду и малочувствителен к условиям окружающей среды. Может
переждать не благоприятные условия. При суперактивности человек мобилизует все свои возможности:
отбирает еду у окружающих, хорошо думает, великолепно размножается. Но тратит он несравненно
больше с тем, что производит. В общем, короткий самоубийственный рывок. Можно так же ввести
градации этих состояний. Типа, не совсем окоченел или не совсем сгорел.